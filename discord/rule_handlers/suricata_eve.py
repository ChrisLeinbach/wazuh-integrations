from typing import List, Union
from copy import deepcopy
from rule_handlers.base_handler import BaseHandler


class SuricataEve(BaseHandler):

    """
    SuricataEve handles alerts generated by agents parsing Suricata's eve.json file.
    """

    alert_ids = ['86601']
    enabled = True

    def __init__(self, alert_data: dict):
        super().__init__(alert_data)

    def generate_fields(self) -> List[dict]:
        sig_field = deepcopy(self.base_field)
        sig_field["name"] = "Signature"
        sig_field["value"] = self.alert_data["data"]["alert"]["signature_id"]

        action_field = deepcopy(self.base_field)
        action_field["name"] = "Action"
        action_field["value"] = self.alert_data["data"]["alert"]["action"].capitalize()

        severity_field = deepcopy(self.base_field)
        severity_field["name"] = "Severity"
        severity_field["value"] = self.alert_data["data"]["alert"]["severity"]

        src_ip_field = deepcopy(self.base_field)
        src_ip_field["name"] = "Source"
        src_ip_field["value"] = \
            f"{self.alert_data["data"]["flow"]["src_ip"]}:{self.alert_data["data"]["flow"]["src_port"]}"

        dst_ip_field = deepcopy(self.base_field)
        dst_ip_field["name"] = "Destination"
        dst_ip_field["value"] = \
            f"{self.alert_data["data"]["flow"]["dest_ip"]}:{self.alert_data["data"]["flow"]["dst_port"]}"

        conversation_field = deepcopy(self.base_field)
        conversation_field["name"] = "Conversation"
        conversation_field["value"] = \
            (f"[{self.alert_data["data"]["proto"]}] "
             f"{self.alert_data["data"]["flow"]["src_ip"]}:{self.alert_data["data"]["flow"]["src_port"]}"
             f" --> "
             f"{self.alert_data["data"]["flow"]["dest_ip"]}:{self.alert_data["data"]["flow"]["dst_port"]}")

        alert_data = [sig_field, action_field, severity_field, src_ip_field, dst_ip_field, conversation_field]

        if "http" in self.alert_data["data"].keys():
            http_host_field = deepcopy(self.base_field)
            http_host_field["name"] = "HTTP Address"
            http_host_field["value"] = \
                f"{self.alert_data["data"]["http"]["hostname"]}{self.alert_data["data"]["http"]["url"]}"
            alert_data.append(http_host_field)

        return alert_data

    def generate_description(self) -> Union[str, None]:
        """ Default description is acceptably specific. """
        return None
